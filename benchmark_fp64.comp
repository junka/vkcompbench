#version 450 core
#extension GL_EXT_scalar_block_layout : enable
#extension GL_EXT_shader_explicit_arithmetic_types : enable
#extension GL_EXT_shader_explicit_arithmetic_types_float64: require
#extension GL_EXT_control_flow_attributes : enable

#define fma(x, y, z) ((x) * (y) + (z))

layout(binding=0) buffer InputA { f64vec4 x[]; } inputA;
layout(binding=1) buffer InputB { f64vec4 x[]; } inputB;
layout(binding=2) buffer Output { f64vec4 x[]; } outputO;
layout(constant_id = 0) const uint kLoopSize = 10;
layout(local_size_x = 16, local_size_y = 1, local_size_z = 1) in;

void main()
{
    f64vec4 a = inputA.x[gl_GlobalInvocationID.x];
    f64vec4 b = inputB.x[gl_GlobalInvocationID.x];
    f64vec4 c = f64vec4(1.f, 1.f, 1.f, 1.f);
    [[unroll]]
    for(int i = 0; i < kLoopSize; i++) {
      c = fma(a, c, b);
      c = fma(a, c, b);
      c = fma(a, c, b);
      c = fma(a, c, b);
      c = fma(a, c, b);
      c = fma(a, c, b);
      c = fma(a, c, b);
      c = fma(a, c, b);
    }
    outputO.x[gl_GlobalInvocationID.x] = c;
}